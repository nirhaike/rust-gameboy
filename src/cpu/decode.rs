// Copyright 2021 Nir H. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

#![deny(missing_docs)]
//! Gameboy cpu's opcode decoder.

use super::Cpu;
use super::instructions::*;
use crate::GameboyError;

impl<'a> Cpu<'a> {

	/// Returns the instruction that matches the given opcode.
	pub fn decode(&mut self, opcode: u8) -> Result<Instruction, GameboyError> {
		match opcode {
			0x00 => Ok(opcode_00),
			0x01 => Ok(opcode_01),
			0x02 => Ok(opcode_02),
			0x03 => Ok(opcode_03),
			0x04 => Ok(opcode_04),
			0x05 => Ok(opcode_05),
			0x06 => Ok(opcode_06),
			0x07 => Ok(opcode_07),
			0x08 => Ok(opcode_08),
			0x09 => Ok(opcode_09),
			0x0a => Ok(opcode_0a),
			0x0b => Ok(opcode_0b),
			0x0c => Ok(opcode_0c),
			0x0d => Ok(opcode_0d),
			0x0e => Ok(opcode_0e),
			0x0f => Ok(opcode_0f),
			0x11 => Ok(opcode_11),
			0x12 => Ok(opcode_12),
			0x13 => Ok(opcode_13),
			0x14 => Ok(opcode_14),
			0x15 => Ok(opcode_15),
			0x16 => Ok(opcode_16),
			0x17 => Ok(opcode_17),
			0x18 => Ok(opcode_18),
			0x19 => Ok(opcode_19),
			0x1a => Ok(opcode_1a),
			0x1b => Ok(opcode_1b),
			0x1c => Ok(opcode_1c),
			0x1d => Ok(opcode_1d),
			0x1e => Ok(opcode_1e),
			0x1f => Ok(opcode_1f),
			0x20 => Ok(opcode_20),
			0x21 => Ok(opcode_21),
			0x22 => Ok(opcode_22),
			0x23 => Ok(opcode_23),
			0x24 => Ok(opcode_24),
			0x25 => Ok(opcode_25),
			0x26 => Ok(opcode_26),
			0x28 => Ok(opcode_28),
			0x29 => Ok(opcode_29),
			0x2a => Ok(opcode_2a),
			0x2b => Ok(opcode_2b),
			0x2c => Ok(opcode_2c),
			0x2d => Ok(opcode_2d),
			0x2e => Ok(opcode_2e),
			0x2f => Ok(opcode_2f),
			0x30 => Ok(opcode_30),
			0x31 => Ok(opcode_31),
			0x32 => Ok(opcode_32),
			0x33 => Ok(opcode_33),
			0x34 => Ok(opcode_34),
			0x35 => Ok(opcode_35),
			0x36 => Ok(opcode_36),
			0x37 => Ok(opcode_37),
			0x38 => Ok(opcode_38),
			0x39 => Ok(opcode_39),
			0x3a => Ok(opcode_3a),
			0x3b => Ok(opcode_3b),
			0x3c => Ok(opcode_3c),
			0x3d => Ok(opcode_3d),
			0x3e => Ok(opcode_3e),
			0x3f => Ok(opcode_3f),
			0x40 => Ok(opcode_40),
			0x41 => Ok(opcode_41),
			0x42 => Ok(opcode_42),
			0x43 => Ok(opcode_43),
			0x44 => Ok(opcode_44),
			0x45 => Ok(opcode_45),
			0x46 => Ok(opcode_46),
			0x47 => Ok(opcode_47),
			0x48 => Ok(opcode_48),
			0x49 => Ok(opcode_49),
			0x4a => Ok(opcode_4a),
			0x4b => Ok(opcode_4b),
			0x4c => Ok(opcode_4c),
			0x4d => Ok(opcode_4d),
			0x4e => Ok(opcode_4e),
			0x4f => Ok(opcode_4f),
			0x50 => Ok(opcode_50),
			0x51 => Ok(opcode_51),
			0x52 => Ok(opcode_52),
			0x53 => Ok(opcode_53),
			0x54 => Ok(opcode_54),
			0x55 => Ok(opcode_55),
			0x56 => Ok(opcode_56),
			0x57 => Ok(opcode_57),
			0x58 => Ok(opcode_58),
			0x59 => Ok(opcode_59),
			0x5a => Ok(opcode_5a),
			0x5b => Ok(opcode_5b),
			0x5c => Ok(opcode_5c),
			0x5d => Ok(opcode_5d),
			0x5e => Ok(opcode_5e),
			0x5f => Ok(opcode_5f),
			0x60 => Ok(opcode_60),
			0x61 => Ok(opcode_61),
			0x62 => Ok(opcode_62),
			0x63 => Ok(opcode_63),
			0x64 => Ok(opcode_64),
			0x65 => Ok(opcode_65),
			0x66 => Ok(opcode_66),
			0x67 => Ok(opcode_67),
			0x68 => Ok(opcode_68),
			0x69 => Ok(opcode_69),
			0x6a => Ok(opcode_6a),
			0x6b => Ok(opcode_6b),
			0x6c => Ok(opcode_6c),
			0x6d => Ok(opcode_6d),
			0x6e => Ok(opcode_6e),
			0x6f => Ok(opcode_6f),
			0x70 => Ok(opcode_70),
			0x71 => Ok(opcode_71),
			0x72 => Ok(opcode_72),
			0x73 => Ok(opcode_73),
			0x74 => Ok(opcode_74),
			0x75 => Ok(opcode_75),
			0x76 => Ok(opcode_76),
			0x77 => Ok(opcode_77),
			0x78 => Ok(opcode_78),
			0x79 => Ok(opcode_79),
			0x7a => Ok(opcode_7a),
			0x7b => Ok(opcode_7b),
			0x7c => Ok(opcode_7c),
			0x7d => Ok(opcode_7d),
			0x7e => Ok(opcode_7e),
			0x7f => Ok(opcode_7f),
			0x80 => Ok(opcode_80),
			0x81 => Ok(opcode_81),
			0x82 => Ok(opcode_82),
			0x83 => Ok(opcode_83),
			0x84 => Ok(opcode_84),
			0x85 => Ok(opcode_85),
			0x86 => Ok(opcode_86),
			0x87 => Ok(opcode_87),
			0x88 => Ok(opcode_88),
			0x89 => Ok(opcode_89),
			0x8a => Ok(opcode_8a),
			0x8b => Ok(opcode_8b),
			0x8c => Ok(opcode_8c),
			0x8d => Ok(opcode_8d),
			0x8e => Ok(opcode_8e),
			0x8f => Ok(opcode_8f),
			0x90 => Ok(opcode_90),
			0x91 => Ok(opcode_91),
			0x92 => Ok(opcode_92),
			0x93 => Ok(opcode_93),
			0x94 => Ok(opcode_94),
			0x95 => Ok(opcode_95),
			0x96 => Ok(opcode_96),
			0x97 => Ok(opcode_97),
			0x98 => Ok(opcode_98),
			0x99 => Ok(opcode_99),
			0x9a => Ok(opcode_9a),
			0x9b => Ok(opcode_9b),
			0x9c => Ok(opcode_9c),
			0x9d => Ok(opcode_9d),
			0x9e => Ok(opcode_9e),
			0x9f => Ok(opcode_9f),
			0xa0 => Ok(opcode_a0),
			0xa1 => Ok(opcode_a1),
			0xa2 => Ok(opcode_a2),
			0xa3 => Ok(opcode_a3),
			0xa4 => Ok(opcode_a4),
			0xa5 => Ok(opcode_a5),
			0xa6 => Ok(opcode_a6),
			0xa7 => Ok(opcode_a7),
			0xa8 => Ok(opcode_a8),
			0xa9 => Ok(opcode_a9),
			0xaa => Ok(opcode_aa),
			0xab => Ok(opcode_ab),
			0xac => Ok(opcode_ac),
			0xad => Ok(opcode_ad),
			0xae => Ok(opcode_ae),
			0xaf => Ok(opcode_af),
			0xb0 => Ok(opcode_b0),
			0xb1 => Ok(opcode_b1),
			0xb2 => Ok(opcode_b2),
			0xb3 => Ok(opcode_b3),
			0xb4 => Ok(opcode_b4),
			0xb5 => Ok(opcode_b5),
			0xb6 => Ok(opcode_b6),
			0xb7 => Ok(opcode_b7),
			0xb8 => Ok(opcode_b8),
			0xb9 => Ok(opcode_b9),
			0xba => Ok(opcode_ba),
			0xbb => Ok(opcode_bb),
			0xbc => Ok(opcode_bc),
			0xbd => Ok(opcode_bd),
			0xbe => Ok(opcode_be),
			0xbf => Ok(opcode_bf),
			0xc0 => Ok(opcode_c0),
			0xc1 => Ok(opcode_c1),
			0xc2 => Ok(opcode_c2),
			0xc3 => Ok(opcode_c3),
			0xc4 => Ok(opcode_c4),
			0xc5 => Ok(opcode_c5),
			0xc6 => Ok(opcode_c6),
			0xc7 => Ok(opcode_c7),
			0xc8 => Ok(opcode_c8),
			0xc9 => Ok(opcode_c9),
			0xca => Ok(opcode_ca),
			0xcc => Ok(opcode_cc),
			0xcd => Ok(opcode_cd),
			0xce => Ok(opcode_ce),
			0xcf => Ok(opcode_cf),
			0xd0 => Ok(opcode_d0),
			0xd9 => Ok(opcode_d9),
			0xd1 => Ok(opcode_d1),
			0xd2 => Ok(opcode_d2),
			0xd4 => Ok(opcode_d4),
			0xd5 => Ok(opcode_d5),
			0xd6 => Ok(opcode_d6),
			0xd7 => Ok(opcode_d7),
			0xd8 => Ok(opcode_d8),
			0xda => Ok(opcode_da),
			0xdc => Ok(opcode_dc),
			0xde => Ok(opcode_de),
			0xdf => Ok(opcode_df),
			0xe0 => Ok(opcode_e0),
			0xe1 => Ok(opcode_e1),
			0xe2 => Ok(opcode_e2),
			0xe5 => Ok(opcode_e5),
			0xe6 => Ok(opcode_e6),
			0xe7 => Ok(opcode_e7),
			0xe9 => Ok(opcode_e9),
			0xea => Ok(opcode_ea),
			0xee => Ok(opcode_ee),
			0xef => Ok(opcode_ef),
			0xf0 => Ok(opcode_f0),
			0xf1 => Ok(opcode_f1),
			0xf2 => Ok(opcode_f2),
			0xf3 => Ok(opcode_f3),
			0xf5 => Ok(opcode_f5),
			0xf6 => Ok(opcode_f6),
			0xf7 => Ok(opcode_f7),
			0xf8 => Ok(opcode_f8),
			0xf9 => Ok(opcode_f9),
			0xfa => Ok(opcode_fa),
			0xfb => Ok(opcode_fb),
			0xfe => Ok(opcode_fe),
			0xff => Ok(opcode_ff),
			0xcb => {
				let next_byte = self.fetch()?;
				self.decode_cb(next_byte)
			},
			_ => Err(GameboyError::BadOpcode(opcode))
		}
	}

	/// Decode a 16-bit opcode that starts with 0xCB.
	pub fn decode_cb(&self, opcode: u8) -> Result<Instruction, GameboyError> {
		match opcode {
			0x00 => Ok(opcode_cb00),
			0x01 => Ok(opcode_cb01),
			0x02 => Ok(opcode_cb02),
			0x03 => Ok(opcode_cb03),
			0x04 => Ok(opcode_cb04),
			0x05 => Ok(opcode_cb05),
			0x06 => Ok(opcode_cb06),
			0x07 => Ok(opcode_cb07),
			0x08 => Ok(opcode_cb08),
			0x09 => Ok(opcode_cb09),
			0x0a => Ok(opcode_cb0a),
			0x0b => Ok(opcode_cb0b),
			0x0c => Ok(opcode_cb0c),
			0x0d => Ok(opcode_cb0d),
			0x0e => Ok(opcode_cb0e),
			0x0f => Ok(opcode_cb0f),
			0x10 => Ok(opcode_cb10),
			0x11 => Ok(opcode_cb11),
			0x12 => Ok(opcode_cb12),
			0x13 => Ok(opcode_cb13),
			0x14 => Ok(opcode_cb14),
			0x15 => Ok(opcode_cb15),
			0x16 => Ok(opcode_cb16),
			0x17 => Ok(opcode_cb17),
			0x18 => Ok(opcode_cb18),
			0x19 => Ok(opcode_cb19),
			0x1a => Ok(opcode_cb1a),
			0x1b => Ok(opcode_cb1b),
			0x1c => Ok(opcode_cb1c),
			0x1d => Ok(opcode_cb1d),
			0x1e => Ok(opcode_cb1e),
			0x1f => Ok(opcode_cb1f),
			0x20 => Ok(opcode_cb20),
			0x21 => Ok(opcode_cb21),
			0x22 => Ok(opcode_cb22),
			0x23 => Ok(opcode_cb23),
			0x24 => Ok(opcode_cb24),
			0x25 => Ok(opcode_cb25),
			0x26 => Ok(opcode_cb26),
			0x27 => Ok(opcode_cb27),
			0x28 => Ok(opcode_cb28),
			0x29 => Ok(opcode_cb29),
			0x2a => Ok(opcode_cb2a),
			0x2b => Ok(opcode_cb2b),
			0x2c => Ok(opcode_cb2c),
			0x2d => Ok(opcode_cb2d),
			0x2e => Ok(opcode_cb2e),
			0x2f => Ok(opcode_cb2f),
			0x30 => Ok(opcode_cb30),
			0x31 => Ok(opcode_cb31),
			0x32 => Ok(opcode_cb32),
			0x33 => Ok(opcode_cb33),
			0x34 => Ok(opcode_cb34),
			0x35 => Ok(opcode_cb35),
			0x36 => Ok(opcode_cb36),
			0x37 => Ok(opcode_cb37),
			0x38 => Ok(opcode_cb38),
			0x39 => Ok(opcode_cb39),
			0x3a => Ok(opcode_cb3a),
			0x3b => Ok(opcode_cb3b),
			0x3c => Ok(opcode_cb3c),
			0x3d => Ok(opcode_cb3d),
			0x3e => Ok(opcode_cb3e),
			0x3f => Ok(opcode_cb3f),
			0x40 => Ok(opcode_cb40),
			0x41 => Ok(opcode_cb41),
			0x42 => Ok(opcode_cb42),
			0x43 => Ok(opcode_cb43),
			0x44 => Ok(opcode_cb44),
			0x45 => Ok(opcode_cb45),
			0x46 => Ok(opcode_cb46),
			0x47 => Ok(opcode_cb47),
			0x48 => Ok(opcode_cb48),
			0x49 => Ok(opcode_cb49),
			0x4a => Ok(opcode_cb4a),
			0x4b => Ok(opcode_cb4b),
			0x4c => Ok(opcode_cb4c),
			0x4d => Ok(opcode_cb4d),
			0x4e => Ok(opcode_cb4e),
			0x4f => Ok(opcode_cb4f),
			0x50 => Ok(opcode_cb50),
			0x51 => Ok(opcode_cb51),
			0x52 => Ok(opcode_cb52),
			0x53 => Ok(opcode_cb53),
			0x54 => Ok(opcode_cb54),
			0x55 => Ok(opcode_cb55),
			0x56 => Ok(opcode_cb56),
			0x57 => Ok(opcode_cb57),
			0x58 => Ok(opcode_cb58),
			0x59 => Ok(opcode_cb59),
			0x5a => Ok(opcode_cb5a),
			0x5b => Ok(opcode_cb5b),
			0x5c => Ok(opcode_cb5c),
			0x5d => Ok(opcode_cb5d),
			0x5e => Ok(opcode_cb5e),
			0x5f => Ok(opcode_cb5f),
			0x60 => Ok(opcode_cb60),
			0x61 => Ok(opcode_cb61),
			0x62 => Ok(opcode_cb62),
			0x63 => Ok(opcode_cb63),
			0x64 => Ok(opcode_cb64),
			0x65 => Ok(opcode_cb65),
			0x66 => Ok(opcode_cb66),
			0x67 => Ok(opcode_cb67),
			0x68 => Ok(opcode_cb68),
			0x69 => Ok(opcode_cb69),
			0x6a => Ok(opcode_cb6a),
			0x6b => Ok(opcode_cb6b),
			0x6c => Ok(opcode_cb6c),
			0x6d => Ok(opcode_cb6d),
			0x6e => Ok(opcode_cb6e),
			0x6f => Ok(opcode_cb6f),
			0x70 => Ok(opcode_cb70),
			0x71 => Ok(opcode_cb71),
			0x72 => Ok(opcode_cb72),
			0x73 => Ok(opcode_cb73),
			0x74 => Ok(opcode_cb74),
			0x75 => Ok(opcode_cb75),
			0x76 => Ok(opcode_cb76),
			0x77 => Ok(opcode_cb77),
			0x78 => Ok(opcode_cb78),
			0x79 => Ok(opcode_cb79),
			0x7a => Ok(opcode_cb7a),
			0x7b => Ok(opcode_cb7b),
			0x7c => Ok(opcode_cb7c),
			0x7d => Ok(opcode_cb7d),
			0x7e => Ok(opcode_cb7e),
			0x7f => Ok(opcode_cb7f),
			0x80 => Ok(opcode_cb80),
			0x81 => Ok(opcode_cb81),
			0x82 => Ok(opcode_cb82),
			0x83 => Ok(opcode_cb83),
			0x84 => Ok(opcode_cb84),
			0x85 => Ok(opcode_cb85),
			0x86 => Ok(opcode_cb86),
			0x87 => Ok(opcode_cb87),
			0x88 => Ok(opcode_cb88),
			0x89 => Ok(opcode_cb89),
			0x8a => Ok(opcode_cb8a),
			0x8b => Ok(opcode_cb8b),
			0x8c => Ok(opcode_cb8c),
			0x8d => Ok(opcode_cb8d),
			0x8e => Ok(opcode_cb8e),
			0x8f => Ok(opcode_cb8f),
			0x90 => Ok(opcode_cb90),
			0x91 => Ok(opcode_cb91),
			0x92 => Ok(opcode_cb92),
			0x93 => Ok(opcode_cb93),
			0x94 => Ok(opcode_cb94),
			0x95 => Ok(opcode_cb95),
			0x96 => Ok(opcode_cb96),
			0x97 => Ok(opcode_cb97),
			0x98 => Ok(opcode_cb98),
			0x99 => Ok(opcode_cb99),
			0x9a => Ok(opcode_cb9a),
			0x9b => Ok(opcode_cb9b),
			0x9c => Ok(opcode_cb9c),
			0x9d => Ok(opcode_cb9d),
			0x9e => Ok(opcode_cb9e),
			0x9f => Ok(opcode_cb9f),
			0xa0 => Ok(opcode_cba0),
			0xa1 => Ok(opcode_cba1),
			0xa2 => Ok(opcode_cba2),
			0xa3 => Ok(opcode_cba3),
			0xa4 => Ok(opcode_cba4),
			0xa5 => Ok(opcode_cba5),
			0xa6 => Ok(opcode_cba6),
			0xa7 => Ok(opcode_cba7),
			0xa8 => Ok(opcode_cba8),
			0xa9 => Ok(opcode_cba9),
			0xaa => Ok(opcode_cbaa),
			0xab => Ok(opcode_cbab),
			0xac => Ok(opcode_cbac),
			0xad => Ok(opcode_cbad),
			0xae => Ok(opcode_cbae),
			0xaf => Ok(opcode_cbaf),
			0xb0 => Ok(opcode_cbb0),
			0xb1 => Ok(opcode_cbb1),
			0xb2 => Ok(opcode_cbb2),
			0xb3 => Ok(opcode_cbb3),
			0xb4 => Ok(opcode_cbb4),
			0xb5 => Ok(opcode_cbb5),
			0xb6 => Ok(opcode_cbb6),
			0xb7 => Ok(opcode_cbb7),
			0xb8 => Ok(opcode_cbb8),
			0xb9 => Ok(opcode_cbb9),
			0xba => Ok(opcode_cbba),
			0xbb => Ok(opcode_cbbb),
			0xbc => Ok(opcode_cbbc),
			0xbd => Ok(opcode_cbbd),
			0xbe => Ok(opcode_cbbe),
			0xbf => Ok(opcode_cbbf),
			0xc0 => Ok(opcode_cbc0),
			0xc1 => Ok(opcode_cbc1),
			0xc2 => Ok(opcode_cbc2),
			0xc3 => Ok(opcode_cbc3),
			0xc4 => Ok(opcode_cbc4),
			0xc5 => Ok(opcode_cbc5),
			0xc6 => Ok(opcode_cbc6),
			0xc7 => Ok(opcode_cbc7),
			0xc8 => Ok(opcode_cbc8),
			0xc9 => Ok(opcode_cbc9),
			0xca => Ok(opcode_cbca),
			0xcb => Ok(opcode_cbcb),
			0xcc => Ok(opcode_cbcc),
			0xcd => Ok(opcode_cbcd),
			0xce => Ok(opcode_cbce),
			0xcf => Ok(opcode_cbcf),
			0xd0 => Ok(opcode_cbd0),
			0xd1 => Ok(opcode_cbd1),
			0xd2 => Ok(opcode_cbd2),
			0xd3 => Ok(opcode_cbd3),
			0xd4 => Ok(opcode_cbd4),
			0xd5 => Ok(opcode_cbd5),
			0xd6 => Ok(opcode_cbd6),
			0xd7 => Ok(opcode_cbd7),
			0xd8 => Ok(opcode_cbd8),
			0xd9 => Ok(opcode_cbd9),
			0xda => Ok(opcode_cbda),
			0xdb => Ok(opcode_cbdb),
			0xdc => Ok(opcode_cbdc),
			0xdd => Ok(opcode_cbdd),
			0xde => Ok(opcode_cbde),
			0xdf => Ok(opcode_cbdf),
			0xe0 => Ok(opcode_cbe0),
			0xe1 => Ok(opcode_cbe1),
			0xe2 => Ok(opcode_cbe2),
			0xe3 => Ok(opcode_cbe3),
			0xe4 => Ok(opcode_cbe4),
			0xe5 => Ok(opcode_cbe5),
			0xe6 => Ok(opcode_cbe6),
			0xe7 => Ok(opcode_cbe7),
			0xe8 => Ok(opcode_cbe8),
			0xe9 => Ok(opcode_cbe9),
			0xea => Ok(opcode_cbea),
			0xeb => Ok(opcode_cbeb),
			0xec => Ok(opcode_cbec),
			0xed => Ok(opcode_cbed),
			0xee => Ok(opcode_cbee),
			0xef => Ok(opcode_cbef),
			0xf0 => Ok(opcode_cbf0),
			0xf1 => Ok(opcode_cbf1),
			0xf2 => Ok(opcode_cbf2),
			0xf3 => Ok(opcode_cbf3),
			0xf4 => Ok(opcode_cbf4),
			0xf5 => Ok(opcode_cbf5),
			0xf6 => Ok(opcode_cbf6),
			0xf7 => Ok(opcode_cbf7),
			0xf8 => Ok(opcode_cbf8),
			0xf9 => Ok(opcode_cbf9),
			0xfa => Ok(opcode_cbfa),
			0xfb => Ok(opcode_cbfb),
			0xfc => Ok(opcode_cbfc),
			0xfd => Ok(opcode_cbfd),
			0xfe => Ok(opcode_cbfe),
			0xff => Ok(opcode_cbff),
		}
	}

}
